#!/usr/bin/env python

"""
Runs all unit tests in a directory tree, sequentially
"""
import os
import sys

def getTests(path):
    """
    Creates and returns a list of all tests in a directory tree
    List items are tuples of the form (Path, Filename)
    """
    tests = []
    path = path.rstrip('/')
    tree = os.walk(path)
    for directory in tree:
        if directory[0].endswith("/test"):
                for file in directory[2]:
                    if file.startswith("test_") and file.endswith(".py"):
                        tests.append((directory[0] + "/", file))
    return tests

def runUnitTests(tests):
    """
    Runs all unittests in tests
    tests is a list where each item is a tuple of the form:
        (Path, Filename)
    """
    import copy, unittest
    pathorig = copy.copy(sys.path)

    suite = unittest.TestSuite()
    for test in tests:
        print "Adding test: " + test[0] + test[1]
        sys.path = copy.copy(pathorig)
        sys.path.append(test[0])

        md = __import__(test[1][:-3])
        tests = []
        try:
            tests = md.get_tests()
        except AttributeError, ex:
            print "FAILURE: %s has no get_tests function!" % (test[0] +
                test[1],)
        
        suite.addTests(tests)

    print
    unittest.TextTestRunner(verbosity=2).run(suite)

if __name__ == "__main__":
    argv = sys.argv[1:]

    # Grab start path from first argument or current directory
    try:
        path = argv[0]
    except IndexError, ex:
        path = os.getcwd()
        
    tests = getTests(path)
    runUnitTests(tests)

